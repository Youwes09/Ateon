@use "../../../../layouts" as *;
@use "../../../../abstracts" as *;
@use "sass:color";

.timer-widget {
  @include widget-container;
  background: linear-gradient(
    135deg,
    color.adjust($bg, $alpha: -0.12, $lightness: 6%),
    color.adjust($bg, $alpha: -0.18, $lightness: 2%)
  );
  backdrop-filter: blur(40px) saturate(180%);
  -webkit-backdrop-filter: blur(40px) saturate(180%);
  border: 1px solid color.adjust($fg, $alpha: -0.88);
  border-radius: 20px;
  padding: $spacing-md;
  box-shadow: 
    0 20px 60px rgba(0, 0, 0, 0.4),
    0 8px 20px rgba(0, 0, 0, 0.25),
    inset 0 1px 0 color.adjust($fg, $alpha: -0.92),
    inset 0 -1px 0 rgba(0, 0, 0, 0.25);
  position: relative;
  overflow: hidden;

  // Glass reflection effect
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(
      to bottom,
      color.adjust($fg, $alpha: -0.95),
      transparent
    );
    border-radius: 20px 20px 0 0;
    pointer-events: none;
    z-index: 0;
  }

  // Widget header
  .widget-header {
    display: flex;
    align-items: center;
    margin-bottom: $spacing-sm;
    position: relative;
    z-index: 1;

    .header-icon {
      @include material-icon(24px);
      color: $primary;
      margin-right: $spacing-xs;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
      text-shadow: 0 0 12px color.adjust($primary, $alpha: -0.6);
    }

    .header-title {
      font-size: calc(#{$font} * 1.1);
      font-weight: 700;
      color: $fg;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }
  }

  // Add timer button
  .timer-add-button {
    @include button;
    background: linear-gradient(
      135deg,
      color.adjust($primary, $alpha: -0.88),
      color.adjust($primary, $alpha: -0.92)
    );
    border: 1px solid color.adjust($primary, $alpha: -0.8);
    border-radius: 14px;
    padding: $spacing-sm $spacing-md;
    margin: 0;
    color: $primary;
    font-weight: 600;
    transition: all 0.2s ease;
    box-shadow: 
      0 2px 8px color.adjust($primary, $alpha: -0.85),
      0 0 15px color.adjust($primary, $alpha: -0.9),
      inset 0 1px 1px color.adjust($primary, $alpha: -0.85, $lightness: 8%);
    position: relative;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 50%;
      background: linear-gradient(
        to bottom,
        color.adjust($primary, $alpha: -0.85, $lightness: 10%),
        transparent
      );
      border-radius: 14px 14px 0 0;
      pointer-events: none;
    }

    &:hover {
      background: linear-gradient(
        135deg,
        color.adjust($primary, $alpha: -0.85),
        color.adjust($primary, $alpha: -0.9)
      );
      border-color: color.adjust($primary, $alpha: -0.75);
      transform: translateY(-2px);
      box-shadow: 
        0 4px 12px color.adjust($primary, $alpha: -0.75),
        0 0 20px color.adjust($primary, $alpha: -0.85),
        inset 0 1px 1px color.adjust($primary, $alpha: -0.82, $lightness: 10%);
    }

    .timer-add-icon {
      @include material-icon(20px);
      color: $primary;
      filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));
      text-shadow: 0 0 8px color.adjust($primary, $alpha: -0.7);
    }
  }

  // Timer dialog
  .timer-dialog {
    background: linear-gradient(
      135deg,
      color.adjust($fg, $alpha: -0.92),
      color.adjust($fg, $alpha: -0.95)
    );
    border: 1px solid color.adjust($fg, $alpha: -0.9);
    border-radius: 16px;
    padding: $spacing-md;
    margin: $spacing-sm 0 0 0;
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.12),
      inset 0 1px 0 color.adjust($fg, $alpha: -0.94);
    position: relative;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 50%;
      background: linear-gradient(
        to bottom,
        color.adjust($fg, $alpha: -0.92),
        transparent
      );
      border-radius: 16px 16px 0 0;
      pointer-events: none;
    }

    .dialog-title {
      font-size: calc(#{$font} * 1.05);
      font-weight: 600;
      color: $fg;
      margin-bottom: $spacing-sm;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    // Time picker
    .time-picker-container {
      margin: $spacing-sm 0;
    }

    .time-picker-label {
      font-size: calc(#{$font} * 0.85);
      font-weight: 600;
      color: color.adjust($fg, $alpha: -0.3);
      text-transform: lowercase;
      margin-bottom: $spacing-xs;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .time-picker-scroll {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.94),
        color.adjust($fg, $alpha: -0.96)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.92);
      border-radius: 12px;
      box-shadow: 
        inset 0 2px 4px rgba(0, 0, 0, 0.1),
        inset 0 1px 0 color.adjust($fg, $alpha: -0.94);

      scrollbar {
        background: transparent;
        border-radius: 10px;
        min-width: 6px;
        padding: 2px;

        trough {
          background: color.adjust($fg, $alpha: -0.96);
          border-radius: 10px;
          min-width: 6px;
        }

        slider {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.7),
            color.adjust($primary, $alpha: -0.8)
          );
          border-radius: 10px;
          min-width: 6px;
          transition: all 200ms ease;
          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);

          &:hover {
            background: linear-gradient(
              135deg,
              color.adjust($primary, $alpha: -0.6),
              color.adjust($primary, $alpha: -0.75)
            );
            box-shadow: 
              0 2px 6px color.adjust($primary, $alpha: -0.7),
              0 0 10px color.adjust($primary, $alpha: -0.85);
          }
        }
      }
    }

    .time-picker-item {
      @include button;
      background: transparent;
      border: 1px solid transparent;
      border-radius: 8px;
      padding: $spacing-xs $spacing-sm;
      font-family: "JetBrainsMono Nerd Font", monospace;
      font-size: calc(#{$font} * 1.05);
      color: color.adjust($fg, $alpha: -0.4);
      transition: all 150ms ease;

      &:hover {
        background: linear-gradient(
          135deg,
          color.adjust($fg, $alpha: -0.92),
          color.adjust($fg, $alpha: -0.94)
        );
        border-color: color.adjust($fg, $alpha: -0.88);
        color: $fg;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
      }
    }

    .time-picker-item-active {
      background: linear-gradient(
        135deg,
        color.adjust($primary, $alpha: -0.85),
        color.adjust($primary, $alpha: -0.9)
      );
      border-color: color.adjust($primary, $alpha: -0.75);
      color: $primary;
      font-weight: 700;
      font-size: calc(#{$font} * 1.2);
      box-shadow: 
        0 2px 8px color.adjust($primary, $alpha: -0.8),
        0 0 15px color.adjust($primary, $alpha: -0.88),
        inset 0 1px 1px color.adjust($primary, $alpha: -0.82, $lightness: 10%);
      position: relative;
      overflow: hidden;

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 50%;
        background: linear-gradient(
          to bottom,
          color.adjust($primary, $alpha: -0.82, $lightness: 12%),
          transparent
        );
        border-radius: 8px 8px 0 0;
        pointer-events: none;
      }

      &:hover {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.82),
          color.adjust($primary, $alpha: -0.88)
        );
        border-color: color.adjust($primary, $alpha: -0.7);
        box-shadow: 
          0 4px 12px color.adjust($primary, $alpha: -0.75),
          0 0 20px color.adjust($primary, $alpha: -0.85);
      }
    }

    .dialog-button {
      @include button;
      border-radius: 12px;
      padding: $spacing-sm $spacing-md;
      font-size: calc(#{$font} * 0.95);
      font-weight: 600;
      transition: all 200ms ease;
      position: relative;
      overflow: hidden;

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 40%;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.2s ease;
        border-radius: 12px 12px 0 0;
      }

      &-cancel {
        background: linear-gradient(
          135deg,
          color.adjust($fg, $alpha: -0.92),
          color.adjust($fg, $alpha: -0.95)
        );
        border: 1px solid color.adjust($fg, $alpha: -0.88);
        color: $fg;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($fg, $alpha: -0.9),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($fg, $alpha: -0.88),
            color.adjust($fg, $alpha: -0.92)
          );
          border-color: color.adjust($fg, $alpha: -0.82);
          transform: translateY(-1px);
          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.12);

          &::before {
            opacity: 1;
          }
        }
      }

      &-confirm {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.88),
          color.adjust($primary, $alpha: -0.92)
        );
        border: 1px solid color.adjust($primary, $alpha: -0.8);
        color: $primary;
        box-shadow: 
          0 2px 8px color.adjust($primary, $alpha: -0.85),
          0 0 15px color.adjust($primary, $alpha: -0.9);

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($primary, $alpha: -0.85, $lightness: 10%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.85),
            color.adjust($primary, $alpha: -0.9)
          );
          border-color: color.adjust($primary, $alpha: -0.75);
          transform: translateY(-2px);
          box-shadow: 
            0 4px 12px color.adjust($primary, $alpha: -0.75),
            0 0 20px color.adjust($primary, $alpha: -0.85);

          &::before {
            opacity: 1;
          }
        }
      }
    }
  }

  // Timer list
  .timer-list {
    margin-top: $spacing-sm;
    position: relative;
    z-index: 1;
  }

  // Empty state
  .timer-empty {
    padding: calc(#{$spacing-md} * 2) 0;
    text-align: center;

    .empty-icon {
      @include material-icon(64px);
      color: color.adjust($fg, $alpha: -0.6);
      margin-bottom: $spacing-sm;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }

    .empty-text {
      font-size: $font;
      color: color.adjust($fg, $alpha: -0.5);
      font-style: italic;
    }
  }

  // Timer item
  .timer-item {
    background: linear-gradient(
      135deg,
      color.adjust($fg, $alpha: -0.92),
      color.adjust($fg, $alpha: -0.95)
    );
    border: 1px solid color.adjust($fg, $alpha: -0.9);
    border-radius: 14px;
    padding: $spacing-sm $spacing-md;
    margin: $spacing-xs 0;
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.12),
      inset 0 1px 0 color.adjust($fg, $alpha: -0.94);
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 50%;
      background: linear-gradient(
        to bottom,
        color.adjust($fg, $alpha: -0.92),
        transparent
      );
      border-radius: 14px 14px 0 0;
      pointer-events: none;
    }

    &:hover {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.9),
        color.adjust($fg, $alpha: -0.93)
      );
      border-color: color.adjust($fg, $alpha: -0.88);
      transform: translateY(-1px);
      box-shadow: 
        0 4px 12px rgba(0, 0, 0, 0.15),
        inset 0 1px 0 color.adjust($fg, $alpha: -0.92);
    }

    .timer-time {
      font-family: "JetBrainsMono Nerd Font", monospace;
      font-size: calc(#{$font} * 1.5);
      font-weight: 600;
      color: color.adjust($fg, $alpha: -0.3);
      transition: all 200ms ease;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .timer-active {
      color: $primary;
      font-weight: 700;
      text-shadow: 0 0 12px color.adjust($primary, $alpha: -0.6);
    }

    // Timer buttons
    .timer-button {
      @include button;
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.94),
        color.adjust($fg, $alpha: -0.96)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.9);
      border-radius: 10px;
      padding: $spacing-xs;
      min-width: 36px;
      min-height: 36px;
      transition: all 200ms ease;
      position: relative;
      overflow: hidden;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 40%;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.2s ease;
        border-radius: 10px 10px 0 0;
      }

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);

        &::before {
          opacity: 1;
        }
      }

      &-icon {
        @include material-icon(18px);
        filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
      }

      &-start {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.9),
          color.adjust($primary, $alpha: -0.93)
        );
        border-color: color.adjust($primary, $alpha: -0.85);
        box-shadow: 
          0 2px 6px color.adjust($primary, $alpha: -0.88),
          0 0 12px color.adjust($primary, $alpha: -0.92);

        .timer-button-icon {
          color: $primary;
          text-shadow: 0 0 8px color.adjust($primary, $alpha: -0.7);
        }

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($primary, $alpha: -0.88, $lightness: 10%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.85),
            color.adjust($primary, $alpha: -0.9)
          );
          border-color: color.adjust($primary, $alpha: -0.75);
          box-shadow: 
            0 4px 10px color.adjust($primary, $alpha: -0.8),
            0 0 20px color.adjust($primary, $alpha: -0.88);
        }
      }

      &-stop {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.9),
          color.adjust($primary, $alpha: -0.93)
        );
        border-color: color.adjust($primary, $alpha: -0.85);
        box-shadow: 
          0 2px 6px color.adjust($primary, $alpha: -0.88),
          0 0 12px color.adjust($primary, $alpha: -0.92);

        .timer-button-icon {
          color: $primary;
          text-shadow: 0 0 8px color.adjust($primary, $alpha: -0.7);
        }

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($primary, $alpha: -0.88, $lightness: 10%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.85),
            color.adjust($primary, $alpha: -0.9)
          );
          border-color: color.adjust($primary, $alpha: -0.75);
          box-shadow: 
            0 4px 10px color.adjust($primary, $alpha: -0.8),
            0 0 20px color.adjust($primary, $alpha: -0.88);
        }
      }

      &-reset {
        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($fg, $alpha: -0.9),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($fg, $alpha: -0.9),
            color.adjust($fg, $alpha: -0.93)
          );
          border-color: color.adjust($fg, $alpha: -0.85);
        }
      }

      &-delete {
        background: linear-gradient(
          135deg,
          color.adjust($error, $alpha: -0.92),
          color.adjust($error, $alpha: -0.95)
        );
        border-color: color.adjust($error, $alpha: -0.85);
        box-shadow: 
          0 2px 6px color.adjust($error, $alpha: -0.9),
          0 0 12px color.adjust($error, $alpha: -0.94);

        .timer-button-icon {
          color: $error;
          text-shadow: 0 0 8px color.adjust($error, $alpha: -0.7);
        }

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($error, $alpha: -0.9, $lightness: 8%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($error, $alpha: -0.88),
            color.adjust($error, $alpha: -0.92)
          );
          border-color: color.adjust($error, $alpha: -0.75);
          box-shadow: 
            0 4px 10px color.adjust($error, $alpha: -0.8),
            0 0 20px color.adjust($error, $alpha: -0.88);
        }
      }
    }

    // Progress bar
    .timer-progress-container {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.94),
        color.adjust($fg, $alpha: -0.96)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.92);
      border-radius: 8px;
      margin-top: $spacing-sm;
      overflow: hidden;
      box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .timer-progress-bar {
      background: linear-gradient(
        90deg,
        color.adjust($primary, $alpha: -0.3),
        color.adjust($primary, $alpha: -0.2, $lightness: 10%)
      );
      border-radius: 8px;
      min-height: 6px;
      transition: min-width 1000ms linear;
      box-shadow: 
        0 0 12px color.adjust($primary, $alpha: -0.6),
        inset 0 1px 1px color.adjust($primary, $alpha: -0.4, $lightness: 15%);
      position: relative;

      &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 50%;
        background: linear-gradient(
          to bottom,
          color.adjust($primary, $alpha: -0.5, $lightness: 20%),
          transparent
        );
        border-radius: 8px 8px 0 0;
      }
    }
  }

  // Separators
  separator {
    background: linear-gradient(
      90deg,
      transparent,
      color.adjust($fg, $alpha: -0.92),
      transparent
    );
    margin: $spacing-sm 0;
    min-height: 1px;
    opacity: 0.5;
  }
}