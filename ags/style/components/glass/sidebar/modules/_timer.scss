@use "../../../../layouts" as *;
@use "../../../../abstracts" as *;
@use "sass:color";

$is-dark: color.lightness($bg) < 50%;

.timer-widget {
  @include widget-container;
  background: linear-gradient(
    135deg,
    color.adjust($fg, $alpha: -0.88),
    color.adjust($fg, $alpha: -0.92)
  );
  border: 1px solid color.adjust($fg, $alpha: -0.85);
  border-radius: 16px;
  padding: $spacing-md;
  box-shadow: 
    inset 0 1px 2px color.adjust($fg, $alpha: -0.9),
    inset 0 -1px 1px rgba(0, 0, 0, 0.1);

  &::before {
    content: "";
    top: 0;
    left: 0;
    right: 0;
    height: 40%;
    background: linear-gradient(
      to bottom,
      color.adjust($fg, $alpha: -0.93),
      transparent
    );
    border-radius: inherit;
  }

  .widget-header {
    align-items: center;
    margin-bottom: $spacing-sm;

    .header-icon {
      @include material-icon(24px);
      color: $primary;
      margin-right: $spacing-xs;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }

    .header-title {
      font-size: calc(#{$font} * 1.1);
      font-weight: 700;
      color: if($is-dark, $fg, color.adjust($bg, $lightness: -40%));
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
    }
  }

  .timer-add-button {
    @include button;
    background: linear-gradient(
      135deg,
      color.adjust($fg, $alpha: -0.88),
      color.adjust($fg, $alpha: -0.92)
    );
    border: 1px solid color.adjust($fg, $alpha: -0.85);
    border-radius: 12px;
    padding: $spacing-sm $spacing-md;
    margin: 0;
    color: if($is-dark, $fg, color.adjust($bg, $lightness: -40%));
    font-weight: 600;
    transition: all 250ms ease;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
    box-shadow: 
      inset 0 1px 1px color.adjust($fg, $alpha: -0.9),
      inset 0 -1px 1px rgba(0, 0, 0, 0.1);

    &::before {
      content: "";
      top: 0;
      left: 0;
      right: 0;
      height: 40%;
      background: linear-gradient(
        to bottom,
        color.adjust($fg, $alpha: -0.9),
        transparent
      );
      opacity: 0;
      transition: opacity 0.2s ease;
      border-radius: inherit;
    }

    &:hover {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.85),
        color.adjust($fg, $alpha: -0.9)
      );
      border-color: color.adjust($fg, $alpha: -0.8);
      transform: translateY(-1px);

      &::before {
        opacity: 1;
      }
    }

    .timer-add-icon {
      @include material-icon(20px);
      color: if($is-dark, color.adjust($fg, $alpha: -0.3), color.adjust($bg, $lightness: -35%));
      filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
    }
  }

  .timer-dialog {
    background: linear-gradient(
      135deg,
      color.adjust($fg, $alpha: -0.9),
      color.adjust($fg, $alpha: -0.93)
    );
    border: 1px solid color.adjust($fg, $alpha: -0.88);
    border-radius: 12px;
    padding: $spacing-md;
    margin: $spacing-sm 0 0 0;
    box-shadow: 
      inset 0 1px 1px color.adjust($fg, $alpha: -0.92),
      inset 0 -1px 1px rgba(0, 0, 0, 0.08);

    &::before {
      content: "";
      top: 0;
      left: 0;
      right: 0;
      height: 40%;
      background: linear-gradient(
        to bottom,
        color.adjust($fg, $alpha: -0.92),
        transparent
      );
      border-radius: inherit;
    }

    .dialog-title {
      font-size: calc(#{$font} * 1.05);
      font-weight: 600;
      color: if($is-dark, $fg, color.adjust($bg, $lightness: -40%));
      margin-bottom: $spacing-sm;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .time-picker-container {
      margin: $spacing-sm 0;
    }

    .time-picker-label {
      font-size: calc(#{$font} * 0.85);
      font-weight: 600;
      color: if($is-dark, color.adjust($fg, $alpha: -0.4), color.adjust($bg, $lightness: -30%));
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-bottom: $spacing-xs;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .time-picker-scroll {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.92),
        color.adjust($fg, $alpha: -0.94)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.9);
      border-radius: 10px;
      box-shadow: 
        inset 0 1px 1px color.adjust($fg, $alpha: -0.93),
        inset 0 -1px 1px rgba(0, 0, 0, 0.05);

      scrollbar {
        background: transparent;
        border-radius: 10px;
        min-width: 6px;
        padding: 2px;

        trough {
          background: color.adjust($fg, $alpha: -0.96);
          border-radius: 10px;
          min-width: 6px;
        }

        slider {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.3),
            color.adjust($primary, $alpha: -0.4)
          );
          border-radius: 10px;
          min-width: 6px;
          transition: all 200ms ease;
          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);

          &:hover {
            background: linear-gradient(
              135deg,
              color.adjust($primary, $alpha: -0.2),
              color.adjust($primary, $alpha: -0.3)
            );
            box-shadow: 
              0 2px 4px color.adjust($primary, $alpha: -0.7),
              0 0 8px color.adjust($primary, $alpha: -0.85);
          }
        }
      }
    }

    .time-picker-item {
      @include button;
      background: transparent;
      border: 1px solid transparent;
      border-radius: 8px;
      padding: $spacing-xs $spacing-sm;
      font-family: "JetBrainsMono Nerd Font", monospace;
      font-size: calc(#{$font} * 0.95);
      color: if($is-dark, color.adjust($fg, $alpha: -0.5), color.adjust($bg, $lightness: -30%));
      transition: all 150ms ease;

      &:hover {
        background: linear-gradient(
          135deg,
          color.adjust($fg, $alpha: -0.9),
          color.adjust($fg, $alpha: -0.92)
        );
        border-color: color.adjust($fg, $alpha: -0.85);
        color: if($is-dark, $fg, color.adjust($bg, $lightness: -40%));
      }
    }

    .time-picker-item-active {
      background: linear-gradient(
        135deg,
        color.adjust($primary, $alpha: -0.75),
        color.adjust($primary, $alpha: -0.82)
      );
      border-color: color.adjust($primary, $alpha: -0.7);
      color: $primary;
      font-weight: 700;
      font-size: calc(#{$font} * 1.1);
      box-shadow: 
        inset 0 1px 2px rgba(0, 0, 0, 0.2),
        inset 0 -1px 2px rgba(0, 0, 0, 0.1),
        inset 0 1px 0 color.adjust($primary, $alpha: -0.88);

      &::before {
        content: "";
        top: 0;
        left: 0;
        right: 0;
        height: 50%;
        background: linear-gradient(
          to bottom,
          color.adjust($primary, $alpha: -0.82, $lightness: 12%),
          transparent
        );
        border-radius: 8px 8px 0 0;
      }

      &:hover {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.7),
          color.adjust($primary, $alpha: -0.8)
        );
        border-color: color.adjust($primary, $alpha: -0.65);
      }
    }

    .dialog-button {
      @include button;
      border-radius: 12px;
      padding: $spacing-sm $spacing-md;
      font-size: calc(#{$font} * 0.95);
      font-weight: 600;
      transition: all 200ms ease;

      &::before {
        content: "";
        top: 0;
        left: 0;
        right: 0;
        height: 40%;
        opacity: 0;
        transition: opacity 0.2s ease;
        border-radius: 12px 12px 0 0;
      }

      &-cancel {
        background: linear-gradient(
          135deg,
          color.adjust($fg, $alpha: -0.9),
          color.adjust($fg, $alpha: -0.93)
        );
        border: 1px solid color.adjust($fg, $alpha: -0.88);
        color: if($is-dark, $fg, color.adjust($bg, $lightness: -40%));
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        box-shadow: 
          inset 0 1px 1px color.adjust($fg, $alpha: -0.92),
          inset 0 -1px 1px rgba(0, 0, 0, 0.08);

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($fg, $alpha: -0.9),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($fg, $alpha: -0.85),
            color.adjust($fg, $alpha: -0.9)
          );
          border-color: color.adjust($fg, $alpha: -0.82);
          transform: translateY(-1px);

          &::before {
            opacity: 1;
          }
        }
      }

      &-confirm {
        background: linear-gradient(
          135deg, 
          color.adjust($primary, $alpha: -0.75), 
          color.adjust($primary, $alpha: -0.82)
        );
        border: 1px solid color.adjust($primary, $alpha: -0.7);
        color: $primary;
        box-shadow: 
          inset 0 1px 2px rgba(0, 0, 0, 0.2),
          inset 0 -1px 2px rgba(0, 0, 0, 0.1),
          inset 0 1px 0 color.adjust($primary, $alpha: -0.88);

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($primary, $alpha: -0.88, $lightness: 10%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg, 
            color.adjust($primary, $alpha: -0.7), 
            color.adjust($primary, $alpha: -0.8)
          );
          transform: translateY(-2px);
          border-color: color.adjust($primary, $alpha: -0.65);

          &::before {
            opacity: 1;
          }
        }
      }
    }
  }

  .timer-list {
    margin-top: $spacing-sm;
  }

  .timer-empty {
    padding: calc(#{$spacing-md} * 2) 0;
    text-align: center;

    .empty-icon {
      @include material-icon(64px);
      color: if($is-dark, color.adjust($fg, $alpha: -0.6), color.adjust($bg, $lightness: -30%));
      margin-bottom: $spacing-sm;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }

    .empty-text {
      font-size: $font;
      color: if($is-dark, color.adjust($fg, $alpha: -0.5), color.adjust($bg, $lightness: -35%));
      font-style: italic;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }
  }

  .timer-item {
    background: linear-gradient(
      135deg,
      color.adjust($fg, $alpha: -0.9),
      color.adjust($fg, $alpha: -0.93)
    );
    border: 1px solid color.adjust($fg, $alpha: -0.88);
    border-radius: 12px;
    padding: $spacing-sm $spacing-md;
    margin: $spacing-xs 0;
    box-shadow: 
      inset 0 1px 1px color.adjust($fg, $alpha: -0.92),
      inset 0 -1px 1px rgba(0, 0, 0, 0.08);
    transition: all 0.2s ease;

    &:hover {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.85),
        color.adjust($fg, $alpha: -0.9)
      );
      border-color: color.adjust($fg, $alpha: -0.8);
      transform: translateY(-1px);
    }

    .timer-time {
      font-family: "JetBrainsMono Nerd Font", monospace;
      font-size: calc(#{$font} * 1.5);
      font-weight: 600;
      color: if($is-dark, color.adjust($fg, $alpha: -0.3), color.adjust($bg, $lightness: -35%));
      transition: all 200ms ease;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .timer-active {
      color: $primary;
      font-weight: 700;
    }

    .timer-button {
      @include button;
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.92),
        color.adjust($fg, $alpha: -0.94)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.9);
      border-radius: 10px;
      padding: $spacing-xs;
      min-width: 36px;
      min-height: 36px;
      transition: all 200ms ease;
      box-shadow: 
        inset 0 1px 1px color.adjust($fg, $alpha: -0.93),
        inset 0 -1px 1px rgba(0, 0, 0, 0.05);

      &::before {
        content: "";
        top: 0;
        left: 0;
        right: 0;
        height: 40%;
        opacity: 0;
        transition: opacity 0.2s ease;
        border-radius: 10px 10px 0 0;
      }

      &:hover {
        transform: translateY(-1px);

        &::before {
          opacity: 1;
        }
      }

      &-icon {
        @include material-icon(18px);
        filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
      }

      &-start,
      &-stop {
        background: linear-gradient(
          135deg,
          color.adjust($primary, $alpha: -0.85),
          color.adjust($primary, $alpha: -0.9)
        );
        border-color: color.adjust($primary, $alpha: -0.8);
        box-shadow: 
          inset 0 1px 1px color.adjust($primary, $alpha: -0.88),
          inset 0 -1px 1px rgba(0, 0, 0, 0.15);

        .timer-button-icon {
          color: $primary;
        }

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($primary, $alpha: -0.88, $lightness: 10%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($primary, $alpha: -0.8),
            color.adjust($primary, $alpha: -0.88)
          );
          border-color: color.adjust($primary, $alpha: -0.75);
        }
      }

      &-reset {
        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($fg, $alpha: -0.9),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($fg, $alpha: -0.88),
            color.adjust($fg, $alpha: -0.92)
          );
          border-color: color.adjust($fg, $alpha: -0.85);
        }
      }

      &-delete {
        background: linear-gradient(
          135deg,
          color.adjust($error, $alpha: -0.9),
          color.adjust($error, $alpha: -0.93)
        );
        border-color: color.adjust($error, $alpha: -0.85);
        box-shadow: 
          inset 0 1px 1px color.adjust($error, $alpha: -0.92),
          inset 0 -1px 1px rgba(0, 0, 0, 0.08);

        .timer-button-icon {
          color: $error;
        }

        &::before {
          background: linear-gradient(
            to bottom,
            color.adjust($error, $alpha: -0.9, $lightness: 8%),
            transparent
          );
        }

        &:hover {
          background: linear-gradient(
            135deg,
            color.adjust($error, $alpha: -0.85),
            color.adjust($error, $alpha: -0.9)
          );
          border-color: color.adjust($error, $alpha: -0.75);
        }
      }
    }

    .timer-progress-container {
      background: linear-gradient(
        135deg,
        color.adjust($fg, $alpha: -0.94),
        color.adjust($fg, $alpha: -0.96)
      );
      border: 1px solid color.adjust($fg, $alpha: -0.92);
      border-radius: 8px;
      margin-top: $spacing-sm;
      box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .timer-progress-bar {
      background: linear-gradient(
        135deg,
        color.adjust($primary, $alpha: -0.2),
        color.adjust($primary, $alpha: -0.3)
      );
      border-radius: 8px;
      min-height: 6px;
      transition: min-width 1000ms linear;
      box-shadow: 
        inset 0 1px 1px color.adjust($primary, $alpha: -0.4, $lightness: 15%),
        inset 0 -1px 1px rgba(0, 0, 0, 0.1);
    }
  }

  separator {
    background: linear-gradient(
      90deg,
      transparent,
      color.adjust($fg, $alpha: -0.9),
      transparent
    );
    margin: $spacing-sm 0;
    min-height: 1px;
    opacity: 0.5;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}