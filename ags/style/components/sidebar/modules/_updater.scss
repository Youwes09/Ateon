@use "../../../layouts" as *;
@use "../../../abstracts" as *;
@use "sass:color";

.updater-widget {
  @include widget-container;

  // Widget header
  .widget-header {
    margin: 0 $spacing-sm $spacing-sm $spacing-sm;

    .header-icon {
      @include material-icon(28px);
      color: $primary;
      margin-right: $spacing-xs;
    }

    .header-title {
      font-size: calc(#{$font} * 1.1);
      font-weight: 700;
      color: $fg;
    }
  }

  // Version info
  .version-info {
    background: color.adjust($barBg, $lightness: if($darkmode, 2%, -2%));
    border: 1px solid color.adjust($fg, $alpha: -0.9);
    border-radius: calc(#{$round} * 2);
    padding: $spacing-sm $spacing-md;

    @if not $darkmode {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    }

    .version-label {
      font-size: calc(#{$font} * 0.9);
      font-weight: 600;
      color: $outline;
      min-width: 70px;
    }

    .version-value {
      font-family: "JetBrainsMono Nerd Font", monospace;
      font-size: calc(#{$font} * 0.9);
      font-weight: 500;
      color: $fg;
    }
  }

  // Status box
  .status-box {
    background: color.adjust($barBg, $lightness: if($darkmode, 2%, -2%));
    border: 1px solid color.adjust($fg, $alpha: -0.9);
    border-radius: calc(#{$round} * 2);
    padding: $spacing-sm $spacing-md;
    transition: all 250ms ease;

    @if not $darkmode {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    }

    .status-icon {
      @include material-icon(20px);
    }

    .status-message {
      font-size: calc(#{$font} * 0.9);
      font-weight: 500;
    }

    // Status variants
    &.status-idle {
      border-color: color.adjust($fg, $alpha: -0.9);

      .status-icon {
        color: color.adjust($fg, $alpha: -0.4);
      }

      .status-message {
        color: $outline;
      }
    }

    &.status-checking,
    &.status-cloning,
    &.status-copying {
      border-color: color.adjust($primary, $alpha: -0.7);
      background: color.adjust($primary, $alpha: -0.95);

      @if not $darkmode {
        box-shadow: 0 2px 6px color.adjust($primary, $alpha: -0.8);
      }

      .status-icon {
        color: $primary;
        animation: pulse 2s ease-in-out infinite;
      }

      .status-message {
        color: $primary;
      }
    }

    &.status-success {
      border-color: color.adjust(#4ade80, $alpha: -0.7);
      background: color.adjust(#4ade80, $alpha: -0.95);

      @if not $darkmode {
        box-shadow: 0 2px 6px color.adjust(#4ade80, $alpha: -0.8);
      }

      .status-icon {
        color: #4ade80;
      }

      .status-message {
        color: #4ade80;
        font-weight: 600;
      }
    }

    &.status-error {
      border-color: color.adjust($error, $alpha: -0.7);
      background: color.adjust($error, $alpha: -0.95);

      @if not $darkmode {
        box-shadow: 0 2px 6px color.adjust($error, $alpha: -0.8);
      }

      .status-icon {
        color: $error;
      }

      .status-message {
        color: $error;
        font-weight: 600;
      }
    }
  }

  // Action buttons
  .updater-button {
    @include button;
    border-radius: calc(#{$round} * 1.5);
    padding: $spacing-sm $spacing-md;
    font-weight: 600;
    transition: all 250ms ease;

    .button-icon {
      @include material-icon(18px);
    }

    &:disabled {
      opacity: 0.5;
    }

    &-check {
      background: transparent;
      border: 1px solid color.adjust($fg, $alpha: -0.85);
      color: $fg;

      .button-icon {
        color: $outline;
      }

      &:hover:not(:disabled) {
        background: color.adjust($fg, $alpha: -0.95);
        border-color: color.adjust($fg, $alpha: -0.7);
        transform: translateY(-1px);
      }
    }

    &-update {
      background: linear-gradient(135deg, 
        color.adjust($primary, $alpha: -0.88), 
        color.adjust($primary, $alpha: -0.92)
      );
      border: 1px solid color.adjust($primary, $alpha: -0.7);
      color: $primary;

      @if not $darkmode {
        box-shadow: 0 2px 6px color.adjust($primary, $alpha: -0.8);
      }

      .button-icon {
        color: $primary;
      }

      &:hover:not(:disabled) {
        background: linear-gradient(135deg, 
          color.adjust($primary, $alpha: -0.85), 
          color.adjust($primary, $alpha: -0.9)
        );
        transform: translateY(-2px);
        border-color: color.adjust($primary, $alpha: -0.5);

        @if not $darkmode {
          box-shadow: 0 4px 10px color.adjust($primary, $alpha: -0.7);
        }
      }

      &:active:not(:disabled) {
        transform: translateY(-1px);
      }
    }
  }

  // Config toggle button
  .config-toggle-button {
    @include button;
    background: transparent;
    border: 1px solid color.adjust($fg, $alpha: -0.85);
    border-radius: calc(#{$round} * 1.5);
    padding: $spacing-sm $spacing-md;
    transition: all 250ms ease;

    .button-icon {
      @include material-icon(18px);
      color: $outline;
    }

    &:hover {
      background: color.adjust($fg, $alpha: -0.95);
      border-color: color.adjust($fg, $alpha: -0.7);
    }
  }

  // Config list
  .config-list {
    background: color.adjust($barBg, $lightness: if($darkmode, 2%, -2%));
    border: 1px solid color.adjust($fg, $alpha: -0.9);
    border-radius: calc(#{$round} * 2);
    padding: $spacing-md;

    @if not $darkmode {
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
    }

    .config-list-title {
      font-size: calc(#{$font} * 0.85);
      font-weight: 600;
      color: $outline;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-bottom: $spacing-sm;
    }

    .config-item {
      background: color.adjust($barBg, $lightness: if($darkmode, 1%, -1%));
      border: 1px solid color.adjust($fg, $alpha: -0.92);
      border-radius: calc(#{$round} * 1.5);
      padding: $spacing-sm $spacing-md;
      margin: $spacing-xs 0;
      transition: all 200ms ease;

      @if not $darkmode {
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      }

      &:hover {
        background: color.adjust($barBg, $lightness: if($darkmode, 2%, -2%));
        border-color: color.adjust($fg, $alpha: -0.85);
      }

      .config-name {
        font-size: calc(#{$font} * 0.95);
        font-weight: 600;
        color: $fg;
        margin-bottom: 2px;
      }

      .config-path {
        font-size: calc(#{$font} * 0.75);
        color: $outline;
        font-family: "JetBrainsMono Nerd Font", monospace;
      }

      .config-switch {
        border-radius: 5rem;
        padding: 0.1rem;
        background-color: color.adjust($fg, $alpha: -0.9);

        @if not $darkmode {
          box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
        }

        slider {
          border-radius: 1.5rem;
          transition: all 200ms ease;
          margin: 0.2rem;

          @if $darkmode {
            background-color: color.adjust($fg, $alpha: -0.7);
          } @else {
            background-color: $buttonDisabled;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
          }
        }

        &:checked {
          background-color: $buttonEnabled;

          slider {
            background-color: color.adjust($primary, $alpha: -0.3);
          }
        }
      }
    }

    .config-summary {
      background: color.adjust($primary, $alpha: -0.95);
      border: 1px solid color.adjust($primary, $alpha: -0.85);
      border-radius: calc(#{$round} * 1.5);
      padding: $spacing-xs $spacing-sm;
      margin-top: $spacing-sm;

      .summary-text {
        font-size: calc(#{$font} * 0.85);
        font-weight: 600;
        color: $primary;
      }
    }
  }

  // Config info
  .config-info {
    background: color.adjust($barBg, $lightness: if($darkmode, 1%, -1%));
    border: 1px solid color.adjust($fg, $alpha: -0.92);
    border-radius: calc(#{$round} * 1.5);
    padding: $spacing-sm $spacing-md;

    .config-title {
      font-size: calc(#{$font} * 0.85);
      font-weight: 600;
      color: $outline;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-bottom: $spacing-xs;
    }

    .config-detail {
      font-size: calc(#{$font} * 0.85);
      color: color.adjust($fg, $alpha: -0.3);
      font-family: "JetBrainsMono Nerd Font", monospace;
    }
  }

  // Config error
  .config-error {
    background: color.adjust($error, $alpha: -0.95);
    border: 1px solid color.adjust($error, $alpha: -0.8);
    border-radius: calc(#{$round} * 2);
    padding: $spacing-md;

    @if not $darkmode {
      box-shadow: 0 2px 6px color.adjust($error, $alpha: -0.9);
    }

    .config-icon {
      @include material-icon(48px);
      color: $error;
      margin-bottom: $spacing-xs;
    }

    .config-error-text {
      font-size: $font;
      font-weight: 600;
      color: $error;
      margin-bottom: $spacing-xs;
    }

    .config-error-hint {
      font-size: calc(#{$font} * 0.85);
      color: color.adjust($error, $alpha: -0.3);
      font-family: "JetBrainsMono Nerd Font", monospace;
    }
  }

  // Separators
  separator {
    background-color: color.adjust($fg, $alpha: -0.8);
    margin: $spacing-xs 0;
    min-height: 1px;
  }
}

// Pulse animation for loading states
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}