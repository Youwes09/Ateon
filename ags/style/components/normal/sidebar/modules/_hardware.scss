@use "../../../../layouts" as *;
@use "../../../../abstracts" as *;
@use "sass:color";

.hardware-monitor-widget {
  @include widget-container;
  // ðŸ”‘ CRITICAL: Add max-width to prevent expansion
  max-width: 280px;
  width: 100%;

  .hw-header {
    @include widget-header;
  }

  separator {
    @include separator;
  }

  .hw-nav {
    margin: $spacing-sm 0;

    .nav-button {
      @include nav-button;
      
      // ðŸ”‘ CRITICAL: Prevent expansion
      min-width: 0;
      min-height: 0;
      padding: $spacing-xs $spacing-sm; // explicit padding, not auto
      
      // Ensure inner box doesn't stretch
      > box {
        min-width: 0;
        min-height: 0;
        
        .nav-icon,
        .nav-label {
          // Prevent labels from requesting extra space
          min-width: 0;
          text-align: center;
          white-space: nowrap;
        }
      }
    }
  }

  .hw-content {
    padding: $spacing-md 0;

    .hw-scroll {
      @include scrollbar(vertical);
      // ðŸ”‘ Constrain scrollable area
      max-width: 280px;
    }

    .hw-stack {
      // ðŸ”‘ Stack should not expand
      max-width: 280px;

      .hw-main-content {
        padding: 0 $spacing-md;
        // ðŸ”‘ Constrain the main content row
        max-width: 240px;
        width: 100%;
      }

      .circular-progress-bar-widget {
        @include hw-circular-progress-theme(
          $ramProc,
          color.adjust($procBg, $alpha: -0.5)
        );
      }

      .hw-main-circle {
        @include animate;
        // ðŸ”‘ Use FIXED width/height instead of min-width
        width: 8rem;
        height: 8rem;
        min-width: 8rem; // keep for safety
        min-height: 8rem;

        &:active {
          transform: scale(0.8);
        }

        .hw-main-label {
          font-size: calc(#{$font} * 1.5);
          font-weight: 700;
          color: $fg;
          // ðŸ”‘ Prevent label from affecting size
          text-align: center;
        }
      }

      .hw-vertical-metric {
        @include vertical-metric-container;
        // ðŸ”‘ Constrain metric width
        max-width: 60px;
        width: 100%;

        .vertical-metric-label {
          @include metric-label;
          // ðŸ”‘ Prevent label overflow
          max-width: 60px;
          text-align: center;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .vertical-metric-bar-container {
          // ðŸ”‘ Ensure bar container doesn't stretch
          max-width: 30px;
        }

        .vertical-metric-bar {
          @include progress-bar(vertical);
          // ðŸ”‘ Explicit width for vertical bar
          min-width: 12px;
          width: 12px;
        }

        .vertical-metric-detail {
          @include metric-detail;
          // ðŸ”‘ Constrain detail text
          max-width: 60px;
          text-align: center;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      .hw-vertical-display {
        @include vertical-metric-container;
        // ðŸ”‘ Same constraints as metric bar
        max-width: 60px;
        width: 100%;

        .vertical-display-label {
          @include metric-label;
          max-width: 60px;
          text-align: center;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .vertical-display-icon {
          @include material-icon(32px);
          min-height: 6.5rem;
          color: $fg;
          opacity: 0.8;
          margin: $spacing-xs 0;
          // ðŸ”‘ Constrain icon container
          max-width: 60px;
        }

        .vertical-display-detail {
          @include metric-detail;
          max-width: 60px;
          text-align: center;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      .hw-disk-list {
        margin: 0 $spacing-md;
        padding: $spacing-sm;
        border-radius: $round;
        // ðŸ”‘ Constrain disk list width
        max-width: 240px;

        .disk-list-title {
          @include metric-label(0.85);
          margin-bottom: $spacing-xs;
          // ðŸ”‘ Prevent title from stretching
          max-width: 240px;
        }

        .hw-disk-bar {
          padding: $spacing-xs;
          border-radius: calc(#{$round} * 0.75);

          .disk-bar-mount {
            @include metric-detail(0.8);
            // ðŸ”‘ Allow mount point to ellipsize
            max-width: 140px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            flex: 0 1 auto; // don't expand
          }

          .disk-bar-detail {
            @include metric-detail(0.75, 500, $outline);
            // ðŸ”‘ Constrain detail width
            max-width: 80px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            flex: 0 0 auto; // don't expand
          }

          .disk-bar-level {
            @include progress-bar(horizontal, $secondary, 0, 0.6rem);
            border-radius: calc(#{$round} * 0.5);
            // ðŸ”‘ Ensure level bar doesn't cause expansion
            min-width: 0;
            width: 100%;

            trough {
              border-radius: calc(#{$round} * 0.5);
            }

            block.filled {
              border-radius: calc(#{$round} * 0.5);
            }
          }
        }
      }

      // Page-specific themes remain unchanged
      .hw-page-cpu {
        @include hw-circular-progress-theme($cpuProc);

        block.filled {
          background: $cpuProc;
        }
      }

      .hw-page-memory {
        @include hw-circular-progress-theme($ramProc);

        block.filled {
          background: $ramProc;
        }
      }

      .hw-page-gpu {
        @include hw-circular-progress-theme($primary);

        block.filled {
          background: $primary;
        }
      }

      .hw-page-disk {
        @include hw-circular-progress-theme($secondary);
      }
    }
  }
}